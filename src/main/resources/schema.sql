CREATE TABLE IF NOT EXISTS FILMS
(
    FILM_ID      INT          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_NAME    VARCHAR(150) NOT NULL,
    DESCRIPTION  VARCHAR(250) NOT NULL,
    RELEASE_DATE DATE         NOT NULL,
    DURATION     INT          NOT NULL,
    RATE         INT          NOT NULL,
    RATING_ID    INT          NOT NULL
    );

CREATE TABLE IF NOT EXISTS FILM_LIKES
(
    LIKE_ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_ID INT NOT NULL,
    FILM_ID INT NOT NULL
    );

CREATE TABLE IF NOT EXISTS USERS
(
    USER_ID   INT         NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    EMAIL     VARCHAR(60) NOT NULL,
    LOGIN     VARCHAR(60) NOT NULL,
    USER_NAME VARCHAR(60) NOT NULL,
    BIRTHDAY  DATE        NOT NULL
    );

CREATE TABLE IF NOT EXISTS FRIENDSHIP
(
    FRIENDSHIP_ID INT  NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    USER_FROM     INT  NOT NULL,
    USER_TO       INT  NOT NULL,
    STATUS_REL_ID INT  NOT NULL
    );

CREATE TABLE IF NOT EXISTS STATUS_REL
(
    STATUS_REL_ID INT  NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    STATUS_REL_NAME VARCHAR(100) NOT NULL
    );


CREATE TABLE IF NOT EXISTS FILM_GENRE
(
    FILM_GENRE_ID INT NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    FILM_ID       INT NOT NULL,
    GENRE_ID      INT NOT NULL
    );

CREATE TABLE IF NOT EXISTS GENRES
(
    GENRE_ID   INT          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    GENRE_NAME VARCHAR(200) NOT NULL
    );

CREATE TABLE IF NOT EXISTS RATING_MPA
(
    RATING_ID   INT          NOT NULL GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    MPA_NAME    VARCHAR(10)  NOT NULL,
    DESCRIPTION VARCHAR(200) NOT NULL
    );

ALTER TABLE FILMS
    ADD CONSTRAINT IF NOT EXISTS fk_Film_Rating_ID FOREIGN KEY (RATING_ID)
    REFERENCES RATING_MPA (RATING_ID) ON DELETE RESTRICT;

ALTER TABLE FRIENDSHIP
    ADD CONSTRAINT IF NOT EXISTS fk_Friendship_User_From_ID FOREIGN KEY (USER_FROM)
    REFERENCES USERS (USER_ID);

ALTER TABLE FRIENDSHIP
    ADD CONSTRAINT IF NOT EXISTS fk_Friendship_UserTo_ID FOREIGN KEY (USER_TO)
    REFERENCES USERS (USER_ID);

ALTER TABLE FRIENDSHIP
    ADD CONSTRAINT IF NOT EXISTS fk_Friendship_Status_Rel_ID FOREIGN KEY (STATUS_REL_ID)
    REFERENCES STATUS_REL (STATUS_REL_ID);

ALTER TABLE FILM_GENRE
    ADD CONSTRAINT IF NOT EXISTS fk_Film_Genre_Film_ID FOREIGN KEY (FILM_ID)
    REFERENCES FILMS (FILM_ID) ON DELETE CASCADE;

ALTER TABLE FILM_GENRE
    ADD CONSTRAINT IF NOT EXISTS fk_Film_Genre_Genre_ID FOREIGN KEY (GENRE_ID)
    REFERENCES GENRES (GENRE_ID) ON DELETE RESTRICT;


ALTER TABLE FILM_LIKES
    ADD CONSTRAINT IF NOT EXISTS fk_Like_Film_ID FOREIGN KEY (FILM_ID)
    REFERENCES FILMS (FILM_ID) ON DELETE CASCADE;

ALTER TABLE FILM_LIKES
    ADD CONSTRAINT IF NOT EXISTS fk_Like_User_ID FOREIGN KEY (USER_ID)
    REFERENCES USERS (USER_ID);

ALTER TABLE FILM_GENRE
    ADD CONSTRAINT IF NOT EXISTS UC_Film_Genre_GenreID_FilmID UNIQUE (GENRE_ID, FILM_ID)